{"version":3,"file":"ResourcesTable.js","names":["React","DataList","DataListItem","DataListItemRow","DataListCell","DataListToggle","DataListContent","DataListItemCells","Level","LevelItem","Button","DataListAction","Dropdown","DropdownPosition","DropdownItem","KebabToggle","Remove2Icon","RepositoryIcon","ShareAltIcon","EditAltIcon","AccountServiceContext","PermissionRequest","ShareTheResource","Msg","AbstractResourcesTable","EditTheResource","ContentAlert","EmptyMessageState","ContinueCancelModal","ResourcesTable","constructor","props","context","_defineProperty","row","newIsRowOpen","state","isRowOpen","fetchPermissions","resources","data","setState","isOpen","isModalActive","contextOpen","index","length","permissions","Map","resource","doGet","encodeURIComponent","_id","then","response","newPermissions","set","removeShare","get","map","a","username","scopes","doPut","success","localize","render","createElement","icon","messageKey","id","key","style","visibility","isExpanded","dataListCells","width","msgKey","name","onClick","onToggle","href","client","baseUrl","getClientName","shareRequests","onClose","lg","isPlain","position","right","onSelect","toggle","onContextToggle","dropdownItems","sharedWithUsersMsg","sharedWithUsersMessage","isDisabled","numOthers","modalTitle","modalMessage","onContinue","default","variant","component","hasNoPadding","isHidden","hasGutter"],"sources":["../../../src/app/content/my-resources-page/ResourcesTable.tsx"],"sourcesContent":["/*\n * Copyright 2018 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\n\nimport {\n    DataList,\n    DataListItem,\n    DataListItemRow,\n    DataListCell,\n    DataListToggle,\n    DataListContent,\n    DataListItemCells,\n    Level,\n    LevelItem,\n    Button,\n    DataListAction,\n    Dropdown,\n    DropdownPosition,\n    DropdownItem,\n    KebabToggle\n} from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\n\nimport { Remove2Icon, RepositoryIcon, ShareAltIcon, EditAltIcon } from '@patternfly/react-icons';\n\nimport { HttpResponse } from '../../account-service/account.service';\nimport { AccountServiceContext } from '../../account-service/AccountServiceContext';\nimport { PermissionRequest } from \"./PermissionRequest\";\nimport { ShareTheResource } from \"./ShareTheResource\";\nimport { Permission, Resource } from \"./resource-model\";\nimport { Msg } from '../../widgets/Msg';\nimport { ResourcesTableState, ResourcesTableProps, AbstractResourcesTable } from './AbstractResourceTable';\nimport { EditTheResource } from './EditTheResource';\nimport { ContentAlert } from '../ContentAlert';\nimport EmptyMessageState from '../../widgets/EmptyMessageState';\nimport { ContinueCancelModal } from '../../widgets/ContinueCancelModal';\n\nexport interface CollapsibleResourcesTableState extends ResourcesTableState {\n    isRowOpen: boolean[];\n    contextOpen: boolean[];\n    isModalActive: boolean;\n}\n\nexport class ResourcesTable extends AbstractResourcesTable<CollapsibleResourcesTableState> {\n    static contextType = AccountServiceContext;\n    context: React.ContextType<typeof AccountServiceContext>;\n\n    public constructor(props: ResourcesTableProps, context: React.ContextType<typeof AccountServiceContext>) {\n        super(props);\n        this.context = context;\n\n        this.state = {\n            isRowOpen: [],\n            contextOpen: [],\n            isModalActive: false,\n            permissions: new Map()\n        }\n    }\n\n    private onToggle = (row: number): void => {\n        const newIsRowOpen: boolean[] = this.state.isRowOpen;\n        newIsRowOpen[row] = !newIsRowOpen[row];\n        if (newIsRowOpen[row]) this.fetchPermissions(this.props.resources.data[row], row);\n        this.setState({ isRowOpen: newIsRowOpen });\n    };\n\n    private onContextToggle = (row: number, isOpen: boolean): void => {\n        if (this.state.isModalActive) return;\n        const data = this.props.resources.data;\n        const contextOpen = this.state.contextOpen;\n        contextOpen[row] = isOpen;\n        if (isOpen) {\n            const index = row > data.length ? row - data.length - 1 : row;\n            this.fetchPermissions(data[index], index);\n        }\n        this.setState({ contextOpen });\n    }\n\n    private fetchPermissions(resource: Resource, row: number): void {\n        this.context!.doGet<Permission[]>(`/resources/${encodeURIComponent(resource._id)}/permissions`)\n            .then((response) => {\n                const newPermissions: Map<number, Permission[]> = new Map(this.state.permissions);\n                newPermissions.set(row, response.data || []);\n                this.setState({ permissions: newPermissions });\n            });\n    }\n\n    private removeShare(resource: Resource, row: number): Promise<void> {\n        const permissions = this.state.permissions.get(row)!.map(a => ({ username: a.username, scopes: [] }));\n        return this.context!.doPut(`/resources/${encodeURIComponent(resource._id)}/permissions`, permissions)\n            .then(() => {\n                ContentAlert.success(Msg.localize('unShareSuccess'));\n            });\n    }\n\n    public render(): React.ReactNode {\n        if (this.props.resources.data.length === 0) {\n            return (\n                <EmptyMessageState icon={RepositoryIcon} messageKey=\"notHaveAnyResource\"/>\n            );\n        }\n        return (\n            <DataList aria-label={Msg.localize('resources')} id=\"resourcesList\">\n                <DataListItem key='resource-header' aria-labelledby='resource-header'>\n                    <DataListItemRow>\n                        // invisible toggle allows headings to line up properly\n                        <span style={{ visibility: 'hidden' }}>\n                            <DataListToggle\n                                isExpanded={false}\n                                id='resource-header-invisible-toggle'\n                                aria-controls=\"ex-expand1\"\n                            />\n                        </span>\n                        <DataListItemCells\n                            dataListCells={[\n                                <DataListCell key='resource-name-header' width={5}>\n                                    <strong><Msg msgKey='resourceName' /></strong>\n                                </DataListCell>,\n                                <DataListCell key='application-name-header' width={5}>\n                                    <strong><Msg msgKey='application' /></strong>\n                                </DataListCell>,\n                                <DataListCell key='permission-request-header' width={5}>\n                                    <strong><Msg msgKey='permissionRequests' /></strong>\n                                </DataListCell>,\n                            ]}\n                        />\n                    </DataListItemRow>\n                </DataListItem>\n                {this.props.resources.data.map((resource: Resource, row: number) => (\n                    <DataListItem key={'resource-' + row} aria-labelledby={resource.name} isExpanded={this.state.isRowOpen[row]}>\n                        <DataListItemRow>\n                            <DataListToggle\n                                onClick={() => this.onToggle(row)}\n                                isExpanded={this.state.isRowOpen[row]}\n                                id={'resourceToggle-' + row}\n                                aria-controls=\"ex-expand1\"\n                            />\n                            <DataListItemCells\n                                dataListCells={[\n                                    <DataListCell id={'resourceName-' + row} key={'resourceName-' + row} width={5}>\n                                        <Msg msgKey={resource.name} />\n                                    </DataListCell>,\n                                    <DataListCell id={'resourceClient-' + row} key={'resourceClient-' + row} width={5}>\n                                        <a href={resource.client.baseUrl}>{this.getClientName(resource.client)}</a>\n                                    </DataListCell>,\n                                    <DataListCell id={'resourceRequests-' + row} key={'permissionRequests-' + row} width={5}>\n                                        {resource.shareRequests.length > 0 &&\n                                            <PermissionRequest\n                                                resource={resource}\n                                                onClose={() => this.fetchPermissions(resource, row)}\n                                            ></PermissionRequest>\n                                        }\n                                    </DataListCell>\n                                ]}\n                            />\n                            <DataListAction\n                                visibility={{ lg: 'hidden' }}\n                                aria-labelledby=\"check-action-item3 check-action-action3\"\n                                id=\"check-action-action3\"\n                                aria-label=\"Actions\"\n                            >\n                                <Dropdown\n                                    isPlain\n                                    position={DropdownPosition.right}\n                                    onSelect={() => this.setState({ isModalActive: true })}\n                                    toggle={<KebabToggle onToggle={isOpen => this.onContextToggle(row + this.props.resources.data.length + 1, isOpen)} />}\n                                    isOpen={this.state.contextOpen[row + this.props.resources.data.length + 1]}\n                                    dropdownItems={[\n                                        <ShareTheResource\n                                            resource={resource}\n                                            permissions={this.state.permissions.get(row)!}\n                                            sharedWithUsersMsg={this.sharedWithUsersMessage(row)}\n                                            onClose={() => {\n                                                this.setState({ isModalActive: false }, () => {\n                                                    this.onContextToggle(row + this.props.resources.data.length + 1, false);\n                                                    this.fetchPermissions(resource, row + this.props.resources.data.length + 1);\n                                                });\n                                            }}\n                                        >\n                                            {\n                                                (toggle: () => void) => (\n                                                    <DropdownItem id={'mob-share-' + row} key=\"mob-share\" onClick={toggle}>\n                                                        <ShareAltIcon /> <Msg msgKey=\"share\"/>\n                                                    </DropdownItem>)\n                                            }\n                                        </ShareTheResource>,\n                                        <EditTheResource\n                                            resource={resource}\n                                            permissions={this.state.permissions.get(row)!}\n                                            onClose={() => {\n                                                this.setState({ isModalActive: false }, () => {\n                                                    this.onContextToggle(row + this.props.resources.data.length + 1, false);\n                                                    this.fetchPermissions(resource, row + this.props.resources.data.length + 1);\n                                                });\n                                            }}\n                                        >\n                                            {\n                                                (toggle: () => void) => (\n                                                    <DropdownItem\n                                                        id={'mob-edit-' + row} key=\"mob-edit\"\n                                                        isDisabled={this.numOthers(row) < 0}\n                                                        onClick={toggle}\n                                                    >\n                                                        <EditAltIcon /> <Msg msgKey=\"edit\"/>\n                                                    </DropdownItem>)\n                                            }\n                                        </EditTheResource>,\n                                        <ContinueCancelModal\n                                            render={(toggle: () => void) => (\n                                                <DropdownItem\n                                                    id={'mob-remove-' + row}\n                                                    key=\"mob-remove\"\n                                                    isDisabled={this.numOthers(row) < 0}\n                                                    onClick={toggle}\n                                                >\n                                                    <Remove2Icon /> <Msg msgKey=\"unShare\"/>\n                                                </DropdownItem>\n                                            )}\n                                            modalTitle=\"unShare\"\n                                            modalMessage=\"unShareAllConfirm\"\n                                            onClose={() =>\n                                                this.setState({ isModalActive: false }, () => {\n                                                    this.onContextToggle(row + this.props.resources.data.length + 1, false);\n                                                })\n                                            }\n                                            onContinue={() => this.removeShare(resource, row)\n                                                .then(() => this.fetchPermissions(resource, row + this.props.resources.data.length + 1))}\n                                        />\n                                    ]}\n                                />\n                            </DataListAction>\n                            <DataListAction\n                                id={`actions-${row}`}\n                                visibility={{ default: 'hidden', lg: 'visible' }}\n                                aria-labelledby=\"Row actions\"\n                                aria-label=\"Actions\"\n                            >\n                                <ShareTheResource\n                                    resource={resource}\n                                    permissions={this.state.permissions.get(row)!}\n                                    sharedWithUsersMsg={this.sharedWithUsersMessage(row)}\n                                    onClose={() => this.fetchPermissions(resource, row)}\n                                >\n                                    {\n                                        (toggle: () => void) => (\n                                            <Button id={`share-${row}`} variant=\"link\" onClick={toggle}>\n                                                <ShareAltIcon /> <Msg msgKey=\"share\"/>\n                                            </Button>\n                                        )\n                                    }\n                                </ShareTheResource>\n                                <Dropdown\n                                    id={`action-menu-${row}`}\n                                    isPlain\n                                    position={DropdownPosition.right}\n                                    toggle={<KebabToggle onToggle={isOpen => this.onContextToggle(row, isOpen)} />}\n                                    onSelect={() => this.setState({ isModalActive: true })}\n                                    isOpen={this.state.contextOpen[row]}\n                                    dropdownItems={[\n                                        <EditTheResource\n                                            resource={resource}\n                                            permissions={this.state.permissions.get(row)!}\n                                            onClose={() => {\n                                                this.setState({ isModalActive: false }, () => {\n                                                    this.onContextToggle(row, false);\n                                                    this.fetchPermissions(resource, row);\n                                                });\n                                            }}\n                                        >\n                                            {\n                                                (toggle: () => void) => (\n                                                    <DropdownItem\n                                                        id={'edit-' + row}\n                                                        key=\"edit\"\n                                                        component=\"button\"\n                                                        isDisabled={this.numOthers(row) < 0}\n                                                        onClick={toggle}\n                                                    >\n                                                        <EditAltIcon /> <Msg msgKey=\"edit\"/>\n                                                    </DropdownItem>)\n                                            }\n                                        </EditTheResource>,\n                                        <ContinueCancelModal\n                                            render={(toggle: () => void) => (\n                                                <DropdownItem\n                                                    id={'remove-' + row}\n                                                    key=\"remove\"\n                                                    component=\"button\"\n                                                    isDisabled={this.numOthers(row) < 0}\n                                                    onClick={toggle}\n                                                >\n                                                    <Remove2Icon /> <Msg msgKey=\"unShare\"/>\n                                                </DropdownItem>\n                                            )}\n                                            modalTitle=\"unShare\"\n                                            modalMessage='unShareAllConfirm'\n                                            onClose={() =>\n                                                this.setState({ isModalActive: false }, () => {\n                                                    this.onContextToggle(row, false);\n                                                })\n                                            }\n                                            onContinue={() => this.removeShare(resource, row).then(() => this.fetchPermissions(resource, row))}\n                                        />\n                                    ]}\n                                />\n                            </DataListAction>\n                        </DataListItemRow>\n                        <DataListContent\n                            hasNoPadding={false}\n                            aria-label=\"Session Details\"\n                            id={'ex-expand' + row}\n                            isHidden={!this.state.isRowOpen[row]}\n                        >\n                            <Level hasGutter>\n                                <LevelItem><span /></LevelItem>\n                                <LevelItem id={'shared-with-user-message-' + row}>{this.sharedWithUsersMessage(row)}</LevelItem>\n                                <LevelItem><span /></LevelItem>\n                            </Level>\n                        </DataListContent>\n                    </DataListItem>\n                ))}\n            </DataList>\n        );\n    }\n}\n"],"mappings":"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"}