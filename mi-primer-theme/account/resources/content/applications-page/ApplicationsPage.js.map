{"version":3,"file":"ApplicationsPage.js","names":["React","DataList","DataListItem","DataListItemRow","DataListCell","DataListToggle","DataListContent","DataListItemCells","DescriptionList","DescriptionListTerm","DescriptionListGroup","DescriptionListDescription","Grid","GridItem","Button","PageSection","PageSectionVariants","Stack","InfoAltIcon","CheckIcon","ExternalLinkAltIcon","ContentPage","ContinueCancelModal","AccountServiceContext","Msg","ApplicationsPage","Component","constructor","props","context","_defineProperty","clientId","doDelete","encodeURIComponent","then","fetchApplications","row","newIsRowOpen","state","isRowOpen","setState","applications","doGet","response","data","Array","length","fill","elementId","item","application","render","createElement","title","localize","introMessage","isFilled","variant","light","hasGutter","id","style","visibility","height","isExpanded","dataListCells","key","width","className","msgKey","map","appIndex","onClick","onToggle","component","window","open","effectiveUrl","clientName","userConsentRequired","offlineAccess","inUse","hasNoPadding","isHidden","description","split","consent","Fragment","grantedScopes","scope","scopeIndex","name","tosUri","policyUri","logoUri","src","Intl","DateTimeFormat","locale","year","month","day","hour","minute","second","format","createDate","buttonTitle","buttonVariant","modalTitle","modalMessage","modalContinueButtonLabel","onContinue","removeConsent"],"sources":["../../../src/app/content/applications-page/ApplicationsPage.tsx"],"sourcesContent":["/*\n * Copyright 2018 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\n\nimport {\n  DataList,\n  DataListItem,\n  DataListItemRow,\n  DataListCell,\n  DataListToggle,\n  DataListContent,\n  DataListItemCells,\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  Grid,\n  GridItem,\n  Button,\n  PageSection,\n  PageSectionVariants,\n  Stack,\n  StackItem,\n  SplitItem,\n  Split,\n  TextContent\n} from '@patternfly/react-core';\n\nimport { InfoAltIcon, CheckIcon, ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { ContentPage } from '../ContentPage';\nimport { ContinueCancelModal } from '../../widgets/ContinueCancelModal';\nimport { HttpResponse } from '../../account-service/account.service';\nimport { AccountServiceContext } from '../../account-service/AccountServiceContext';\nimport { Msg } from '../../widgets/Msg';\n\ndeclare const locale: string;\n\nexport interface ApplicationsPageProps {\n}\n\nexport interface ApplicationsPageState {\n  isRowOpen: boolean[];\n  applications: Application[];\n}\n\nexport interface GrantedScope {\n  displayTest: string;\n  id: string;\n  name: string;\n}\n\nexport interface Consent {\n  createDate: number;\n  grantedScopes: GrantedScope[];\n  lastUpdatedDate: number;\n}\n\ninterface Application {\n  effectiveUrl: string;\n  clientId: string;\n  clientName: string;\n  consent: Consent;\n  description: string;\n  inUse: boolean;\n  offlineAccess: boolean;\n  userConsentRequired: boolean;\n  scope: string[];\n  logoUri: string;\n  policyUri: string;\n  tosUri: string;\n}\n\nexport class ApplicationsPage extends React.Component<ApplicationsPageProps, ApplicationsPageState> {\n  static contextType = AccountServiceContext;\n  context: React.ContextType<typeof AccountServiceContext>;\n\n  public constructor(props: ApplicationsPageProps, context: React.ContextType<typeof AccountServiceContext>) {\n    super(props);\n    this.context = context;\n    this.state = {\n      isRowOpen: [],\n      applications: []\n    };\n\n    this.fetchApplications();\n  }\n\n  private removeConsent = (clientId: string) => {\n    this.context!.doDelete(\"/applications/\" + encodeURIComponent(clientId) + \"/consent\")\n      .then(() => {\n        this.fetchApplications();\n      });\n  }\n\n  private onToggle = (row: number): void => {\n    const newIsRowOpen: boolean[] = this.state.isRowOpen;\n    newIsRowOpen[row] = !newIsRowOpen[row];\n    this.setState({ isRowOpen: newIsRowOpen });\n  };\n\n  private fetchApplications(): void {\n    this.context!.doGet<Application[]>(\"/applications\")\n      .then((response: HttpResponse<Application[]>) => {\n        const applications = response.data || [];\n        this.setState({\n          isRowOpen: new Array(applications.length).fill(false),\n          applications: applications\n        });\n      });\n  }\n\n  private elementId(item: string, application: Application): string {\n    return `application-${item}-${application.clientId}`;\n  }\n\n  public render(): React.ReactNode {\n    return (\n      <ContentPage\n        title={Msg.localize('applicationsPageTitle')}\n        introMessage={Msg.localize('applicationsPageSubTitle')}\n      >\n        <PageSection isFilled variant={PageSectionVariants.light}>\n\n          <Stack hasGutter>\n            <DataList id=\"applications-list\" aria-label={Msg.localize('applicationsPageTitle')}>\n              <DataListItem id=\"applications-list-header\" aria-labelledby=\"Columns names\">\n                <DataListItemRow>\n                  // invisible toggle allows headings to line up properly\n                  <span style={{ visibility: 'hidden', height: 55 }}>\n                    <DataListToggle\n                      isExpanded={false}\n                      id='applications-list-header-invisible-toggle'\n                      aria-controls=\"hidden\"\n                    />\n                  </span>\n                  <DataListItemCells\n                    dataListCells={[\n                      <DataListCell key='applications-list-client-id-header' width={2} className=\"pf-u-pt-md\">\n                        <strong><Msg msgKey='applicationName' /></strong>\n                      </DataListCell>,\n                      <DataListCell key='applications-list-app-type-header' width={2} className=\"pf-u-pt-md\">\n                        <strong><Msg msgKey='applicationType' /></strong>\n                      </DataListCell>,\n                      <DataListCell key='applications-list-status' width={2} className=\"pf-u-pt-md\">\n                        <strong><Msg msgKey='status' /></strong>\n                      </DataListCell>,\n                    ]}\n                  />\n                </DataListItemRow>\n              </DataListItem>\n              {this.state.applications.map((application: Application, appIndex: number) => {\n                return (\n                  <DataListItem id={this.elementId(\"client-id\", application)} key={'application-' + appIndex} aria-labelledby=\"applications-list\" isExpanded={this.state.isRowOpen[appIndex]}>\n                    <DataListItemRow className=\"pf-u-align-items-center\">\n                      <DataListToggle\n                        onClick={() => this.onToggle(appIndex)}\n                        isExpanded={this.state.isRowOpen[appIndex]}\n                        id={this.elementId('toggle', application)}\n                        aria-controls={this.elementId(\"expandable\", application)}\n                      />\n                      <DataListItemCells\n                        className=\"pf-u-align-items-center\"\n                        dataListCells={[\n                          <DataListCell id={this.elementId('name', application)} width={2} key={'app-' + appIndex}>\n                            <Button className=\"pf-u-pl-0 title-case\" component=\"a\" variant=\"link\" onClick={() => window.open(application.effectiveUrl)}>\n                              {application.clientName || application.clientId} <ExternalLinkAltIcon/>\n                            </Button>\n                          </DataListCell>,\n                          <DataListCell id={this.elementId('internal', application)} width={2} key={'internal-' + appIndex}>\n                            {application.userConsentRequired ? Msg.localize('thirdPartyApp') : Msg.localize('internalApp')}\n                            {application.offlineAccess ? ', ' + Msg.localize('offlineAccess') : ''}\n                          </DataListCell>,\n                          <DataListCell id={this.elementId('status', application)} width={2} key={'status-' + appIndex}>\n                            {application.inUse ? Msg.localize('inUse') : Msg.localize('notInUse')}\n                          </DataListCell>\n                        ]}\n                      />\n                  </DataListItemRow>\n                  \n                  <DataListContent\n                    className=\"pf-u-pl-35xl\"\n                    hasNoPadding={false}\n                    aria-label={Msg.localize('applicationDetails')}\n                    id={this.elementId(\"expandable\", application)}\n                    isHidden={!this.state.isRowOpen[appIndex]}\n                  >\n                    <DescriptionList>\n                      <DescriptionListGroup>\n                        <DescriptionListTerm>{Msg.localize('client')}</DescriptionListTerm>\n                        <DescriptionListDescription>{application.clientId}</DescriptionListDescription>\n                      </DescriptionListGroup>\n                      {application.description &&\n                        <DescriptionListGroup>\n                          <DescriptionListTerm>{Msg.localize('description')}</DescriptionListTerm>\n                          <DescriptionListDescription>{application.description}</DescriptionListDescription>\n                        </DescriptionListGroup>\n                      }\n                      {application.effectiveUrl &&\n                        <DescriptionListGroup>\n                          <DescriptionListTerm>URL</DescriptionListTerm>\n                          <DescriptionListDescription id={this.elementId(\"effectiveurl\", application)}>\n                            {application.effectiveUrl.split('\"')}\n                          </DescriptionListDescription>\n                        </DescriptionListGroup>\n                      }\n                      {application.consent &&\n                        <React.Fragment>\n                          <DescriptionListGroup>\n                            <DescriptionListTerm>Has access to</DescriptionListTerm>\n                            {application.consent.grantedScopes.map((scope: GrantedScope, scopeIndex: number) => {\n                                return (\n                                  <React.Fragment key={'scope-' + scopeIndex} >\n                                      <DescriptionListDescription><CheckIcon />{Msg.localize(scope.name)}</DescriptionListDescription>\n                                  </React.Fragment>\n                                )\n                              })}\n                          </DescriptionListGroup>\n                          {application.tosUri &&\n                              <DescriptionListGroup>\n                                  <DescriptionListTerm>{Msg.localize('termsOfService')}</DescriptionListTerm>\n                                  <DescriptionListDescription>{application.tosUri}</DescriptionListDescription>\n                              </DescriptionListGroup>\n                          }\n                          {application.policyUri  &&\n                             <DescriptionListGroup>\n                                 <DescriptionListTerm>{Msg.localize('policy')}</DescriptionListTerm>\n                                 <DescriptionListDescription>{application.policyUri }</DescriptionListDescription>\n                             </DescriptionListGroup>\n                          }\n                          {application.logoUri &&\n                             <DescriptionListGroup>\n                                 <DescriptionListTerm>{Msg.localize('logo')}</DescriptionListTerm>\n                                 <DescriptionListDescription><img src={application.logoUri} /></DescriptionListDescription>\n                             </DescriptionListGroup>\n                          }\n                          <DescriptionListGroup>\n                            <DescriptionListTerm>{Msg.localize('accessGrantedOn') + ': '}</DescriptionListTerm>\n                            <DescriptionListDescription>\n                              {new Intl.DateTimeFormat(locale, {\n                                  year: 'numeric',\n                                  month: 'long',\n                                  day: 'numeric',\n                                  hour: 'numeric',\n                                  minute: 'numeric',\n                                  second: 'numeric'\n                                }).format(application.consent.createDate)}\n                            </DescriptionListDescription>\n                          </DescriptionListGroup>\n                        </React.Fragment>\n                      }\n                    </DescriptionList>\n                    {(application.consent || application.offlineAccess) &&\n                    <Grid hasGutter>\n                      <hr />\n                      <GridItem>\n                        <React.Fragment>\n                          <ContinueCancelModal\n                            buttonTitle={Msg.localize('removeButton')} // required\n                            buttonVariant='secondary' // defaults to 'primary'\n                            modalTitle={Msg.localize('removeModalTitle')} // required\n                            modalMessage={Msg.localize('removeModalMessage', [application.clientId])}\n                            modalContinueButtonLabel={Msg.localize('confirmButton')} // defaults to 'Continue'\n                            onContinue={() => this.removeConsent(application.clientId)} // required\n                          />\n                        </React.Fragment>\n                      </GridItem>\n                      <GridItem><InfoAltIcon /> {Msg.localize('infoMessage')}</GridItem>\n                    </Grid>\n                    }\n                  </DataListContent>\n                  </DataListItem>\n                )\n              })}\n      </DataList>\n      </Stack>\n      </PageSection>\n      </ContentPage>\n    );\n  }\n};\n"],"mappings":"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"}